//PENTRU PUNCTUL 1
void timer1()
{
  cli(); 
  TCCR1A=0;
  TCCR1B=0;
  TCNT1=0;
  OCR1A=15624;
  TCCR1B|=(1<<WGM12);
  TCCR1B|=(1<<CS12)|(1<<CS10);
  TIMSK1|=(1<<OCIE1A);
  sei();  
}
//PENTRU PUNCTUL 2
void USART_init()
{
  UBRR0 = 103; //setare viteza transmisie date 9600 biti/sec
  UCSR0B = (1<<RXEN0)|(1<<TXEN0); //enable transmisie/receptie
  UCSR0C = (1<<USBS0)|(3<<UCSZ00);//setare biti date si biti stop
}
void tastatura()
{
  unsigned char input;
  input=UDR0;//preia valoarea introdusa de la tastatura
  if(input=='A')//verificam daca a fost introdus caracterul A
  {
     PORTB|=(1<<PB2);//aprinde ledul 
  }
   if(input=='S')//verificam daca a fost introdus caracterul S
  {
     PORTB&=~(1<<PB2);//stinge ledul
  }
}
//PENTRU PUNCTUL 3 SI PUNCTUL 5
void adc_init()
{
//set division factor between system clock frequency and the input clock to the ADC‐ 128
ADCSRA |= ((1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0));//set division factor between system clock
ADMUX |= (1<<REFS0); //AVcc with external capacitor at Aref pin
ADCSRA |= (1<<ADEN);//enable ADC
ADCSRA |= (1<<ADSC);//pornire conversie ADC
}
uint16_t read_adc(uint8_t channel)
{
ADMUX &= 0xF0; // selectare input A0->A5
ADMUX |= channel; // selectare canal
ADCSRA |= (1<<ADSC); //pornire conversie
while(ADCSRA & (1<<ADSC));//asteptam pana conversiile nu sunt actualizate
return ADC; //returneaza tensiunea
}
void temperatura()
{
  Serial.begin(9600);
  int val;
  int tempPin = 5;
  val = analogRead(tempPin);
  float mv = ( val/1024.0)*5000;
  float cel = mv/10;

  Serial.print("TEMPRATURE = ");
  Serial.print(cel);
  Serial.print("*C");
  Serial.println();
  delay(1);
  
  if(cel<=14)
  {
    PORTB|=(1<<PB3);//aprindere led pentru temperatura
  }
  else if(cel>=14)
  {
    PORTB &=~(1<<PB3);//stingere led pentru temperatura
  }
  
}
//PENTRU PUNCTUL 4
void timer2()
{
  TCCR2A = 0;//setarea valorilor registrului pe 0
  DDRD|=(1<<PD2);
  TCCR2A |= (1 << COM2B1); //clear OC2B on match
  TCCR2A |= (1 << WGM21)|(1 << WGM20);//fast pwm
  TCCR2B |= (1 << CS22) | (1 << CS21) | (1 << CS20);//prescaler
  OCR2B = 0;
}
void PWM()
{
  //fade in
  for(int i=0; i<256; i++)
  {
    OCR2B =i;
    _delay_ms(3);
  }
  OCR2B =255;
  _delay_ms(1000);
  //fade out
  for(int i=256; i>0; i--)
  {
    OCR2B =i;
    _delay_ms(3);
  }
  OCR2B =0;
  _delay_ms(1000);
}
//PENTRU PUNCTUL 6
void initiale_nume()
{
  //Litera F->Faur
  PORTD|=1<<PD3|1<<PD7;
  PORTB|=1<<PB0|1<<PB1;
  delay(1000);
  //Litera G->Gorie
  PORTD|=1<<PD3|1<<PD5|1<<PD6|1<<PD7;
  PORTB|=1<<PB0|1<<PB1;
  delay(1000);
  PORTD&=~(1<<PD5|1<<PD6);
}
void setup()
{
  cli();
  DDRB = 0xFF;
  DDRD = 0xF8;//1111 1000
  DDRC = 0x00;
  timer1();
  timer2();
  USART_init();
  adc_init();
  sei();
}
void loop()
{
  initiale_nume(); 
  tastatura();
  temperatura();
  PWM();
}
ISR(TIMER1_COMPA_vect)
{
  PORTB^=(1<<PB5);
}